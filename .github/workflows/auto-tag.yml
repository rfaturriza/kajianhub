name: Auto Tag on Main Merge

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write

jobs:
  auto-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if this is a production release
        id: check_production
        run: |
          # Check recent commits for production release indicators
          recent_commits=$(git log --oneline -n 5)
          echo "Recent commits:"
          echo "$recent_commits"

          if echo "$recent_commits" | grep -q "production_"; then
            echo "is_production=true" >> $GITHUB_OUTPUT
            echo "üöÄ Production release detected in recent commits"
          else
            echo "is_production=false" >> $GITHUB_OUTPUT
            echo "üîß No production release detected - skipping auto-tag"
          fi

      - name: Extract version from pubspec.yaml
        if: steps.check_production.outputs.is_production == 'true'
        id: get_version
        run: |
          # Extract version from pubspec.yaml (format: x.y.z+build)
          VERSION=$(grep "^version:" pubspec.yaml | sed 's/version: *//' | sed 's/+.*//')
          BUILD_NUMBER=$(grep "^version:" pubspec.yaml | sed 's/.*+//')
          FULL_VERSION=$(grep "^version:" pubspec.yaml | sed 's/version: *//')

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT

          echo "Extracted version: $VERSION"
          echo "Build number: $BUILD_NUMBER"
          echo "Full version: $FULL_VERSION"

      - name: Check if tag already exists
        if: steps.check_production.outputs.is_production == 'true'
        id: check_tag
        run: |
          if git tag -l | grep -q "^v${{ steps.get_version.outputs.version }}$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.get_version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.get_version.outputs.version }} does not exist"
          fi

      - name: Create and push tag
        if: steps.check_production.outputs.is_production == 'true' && steps.check_tag.outputs.exists == 'false'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Create annotated tag with version info
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release v${{ steps.get_version.outputs.version }} (Build: ${{ steps.get_version.outputs.build_number }})"

          # Push the tag
          git push origin "v${{ steps.get_version.outputs.version }}"

          echo "‚úÖ Created and pushed tag: v${{ steps.get_version.outputs.version }}"

      - name: Create GitHub Release
        if: steps.check_production.outputs.is_production == 'true' && steps.check_tag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            üöÄ **KajianHub v${{ steps.get_version.outputs.version }}**

            **Build Number:** ${{ steps.get_version.outputs.build_number }}
            **Full Version:** ${{ steps.get_version.outputs.full_version }}

            This production release was automatically created from the main branch.

            ### What's Changed
            - Production release with semantic version bump
            - Available on Google Play Store and Apple App Store

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.get_version.outputs.version }}...v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Skip non-production release
        if: steps.check_production.outputs.is_production == 'false'
        run: |
          echo "‚è≠Ô∏è Skipping auto-tag creation for non-production release"
          echo "Auto-tags are only created for production releases (production_patch, production_minor, production_major)"

      - name: Tag already exists
        if: steps.check_production.outputs.is_production == 'true' && steps.check_tag.outputs.exists == 'true'
        run: |
          echo "‚ö†Ô∏è Tag v${{ steps.get_version.outputs.version }} already exists. Skipping tag creation."
          echo "If you want to create a new tag, please bump the version in pubspec.yaml first."
