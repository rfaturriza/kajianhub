name: iOS Build & Deploy

on:
  workflow_dispatch:
    inputs:
      lane:
        description: "Fastlane lane"
        required: true
        default: "internal"
        type: choice
        options:
          - internal_patch
          - internal_minor
          - internal_major
          - promote_internal_to_beta
          - promote_beta_to_production
          - promote_internal_to_production
          - production_patch
          - production_minor
          - production_major

jobs:
  release-ios:
    name: Build and release iOS app
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Firebase
        run: |
          echo "$FIREBASE_OPTIONS" | base64 --decode > lib/firebase_options.dart
          echo "$FIREBASE_OPTIONS_DEBUG" | base64 --decode > lib/firebase_options_debug.dart
          echo "$FIREBASE_ANDROID_JSON" | base64 --decode > android/app/google-services.json
          echo "$FIREBASE_IOS_PLIST" | base64 --decode > ios/Runner/GoogleService-Info.plist
        env:
          FIREBASE_OPTIONS: ${{ secrets.FIREBASE_OPTION_FILE }}
          FIREBASE_OPTIONS_DEBUG: ${{ secrets.FIREBASE_OPTION_FILE_DEBUG }}
          FIREBASE_ANDROID_JSON: ${{ secrets.GOOGLE_SERVICE_ANDROID_JSON_FILE }}
          FIREBASE_IOS_PLIST: ${{ secrets.GOOGLE_SERVICE_IOS_PLIST_FILE }}

      - name: Add .env file
        run: |
          echo "$ENV_FILE" | base64 --decode > .env
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}

      - name: Set up Ruby & Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true
          working-directory: ios

      - name: Read Flutter version
        id: read_fvm_config
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ./.fvm/fvm_config.json

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ fromJson(steps.read_fvm_config.outputs.content).flutterSdkVersion }}

      - name: Install packages
        run: flutter pub get

      - name: Run build-runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run easy_localization
        run: flutter pub run easy_localization:generate -f keys -o locale_keys.g.dart --source-dir assets/translations

      - name: Build ipa without signing
        run: |
          flutter build ipa --no-codesign

      - name: Configure AppStore Connect
        run: |
          echo "$APP_STORE_CONNECT_API_KEY_CONTENT" | base64 --decode > ios/fastlane/AppStoreConnectAuthKey.p8
          echo "$DISTRIBUTION_CERTIFICATE" | base64 --decode > ios/fastlane/DistributionCertificate.p12
        env:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          DISTRIBUTION_CERTIFICATE: ${{ secrets.DISTRIBUTION_CERTIFICATE }}

      - name: Execute Fastlane
        run: |
          export APP_STORE_CONNECT_API_KEY_CONTENT_DECODED=$(cat ./fastlane/AppStoreConnectAuthKey.p8)
          bundle exec fastlane ${{ github.event.inputs.lane || 'internal_patch' }}
        working-directory: ios
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSWORD }}

  bump-version:
    name: Bump Version
    needs: release-ios
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Flutter version
        id: read_fvm_config
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ./.fvm/fvm_config.json

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ fromJson(steps.read_fvm_config.outputs.content).flutterSdkVersion }}

      - name: Get branch name
        id: branch-name
        run: |
          if [ ${{ github.event_name == 'pull_request' }} ]; then
            echo "name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Install Cider
        run: dart pub global activate cider

      - name: Increment Version and Build Number
        run: |
          if [[ "${{ github.event.inputs.lane }}" == *_major ]]; then
            flutter pub global run cider bump major --bump-build
          elif [[ "${{ github.event.inputs.lane }}" == *_minor ]]; then
            flutter pub global run cider bump minor --bump-build
          elif [[ "${{ github.event.inputs.lane }}" == *_patch ]]; then
            flutter pub global run cider bump patch --bump-build
          else
            echo "Skipping version increment for promotion lanes"
          fi

      - name: Commit & Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: bump build number (BOT)"
          file_pattern: pubspec.yaml
          branch: ${{ steps.branch-name.outputs.name }}
